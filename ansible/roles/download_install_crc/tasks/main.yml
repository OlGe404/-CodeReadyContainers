---
- name: Install required software packages for Debian/Ubuntu
  become: true
  ansible.builtin.apt:
    name: "{{ item }}"
    update_cache: yes
    cache_valid_time: 86400
  loop:
    - qemu-kvm
    - libvirt-daemon
    - libvirt-daemon-system
    - network-manager

- name: Download and unarchive crc
  become: true
  ansible.builtin.unarchive:
    src: "https://developers.redhat.com/content-gateway/file/pub/openshift-v4/clients/crc/{{ download_install_crc_version }}/crc-linux-amd64.tar.xz"
    dest: /usr/local/bin
    mode: 0755
    owner: "{{ lookup('env', 'USER') }}"
    group: root
    remote_src: true

- name: Make crc binary executable
  become: true
  ansible.builtin.copy:
    src: "/usr/local/bin/crc-linux-{{ download_install_crc_version }}-amd64/crc"
    dest: /usr/local/bin
    mode: 0755
    owner: "{{ lookup('env', 'USER') }}"
    group: root
    remote_src: true

- name: Prepare and run crc
  block:
    - name: Disable telemetry data 
      changed_when: false
      ansible.builtin.command: crc config set consent-telemetry no

    - name: Add current user to 'libvirt' group
      become: true
      ansible.builtin.user:
        name: "{{ lookup('env', 'USER') }}"
        groups: ["libvirt"]
        append: true

    - name: Configure cluster monitoring
      ansible.builtin.include_tasks:
        file: cluster_monitoring.yaml
      when: download_intall_crc_enable_cluster_monitoring|bool

    - name: >-
        Refresh user groups and run crc setup
        (downloads ~3GB, so this can take a while)
      ansible.builtin.shell: sg libvirt -c "crc setup"

    - name: >-
        Refresh user groups and start crc
        (pulls and starts all containers, so this can take a while too)
      ansible.builtin.command: >
        sg libvirt -c "crc start --pull-secret-file {{ download_install_crc_pull_secret_path }}"

    - name: Copy 'oc' to /usr/local/bin
      become: true
      ansible.builtin.copy:
        src: "{{ lookup('env', 'HOME') }}/.crc/bin/oc/oc"
        dest: /usr/local/bin
        mode: 0755
        owner: "{{ lookup('env', 'USER') }}"
        group: root
        remote_src: true
        force: yes

- name: Print login info for the openshift webconsole
  debug: 
    msg: >-
      You can now login to the openshift webconsole 
      at https://console-openshift-console.apps-crc.testing.
      Run 'crc console --credentials' to obtain your credentials.
