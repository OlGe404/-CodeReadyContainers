---
- name: Install crc {{ crc_version }}
  hosts: localhost
  connection: local
  vars_files: vars.yaml
  pre_tasks:
    - name: Get pull-secret file infos
      ansible.builtin.stat:
        path: "{{ crc_pull_secret_file }}"
      register: pull_secret_file

    - name: Test existence of pull-secret file
      ansible.builtin.assert:
        that:
          - pull_secret_file.stat.exists
        fail_msg: >-
          The mandatory pull-secret file doesn't exist at '{{ crc_pull_secret_file }}'.
          Read the "Requirements" section in README.md on how to create it.

    - name: Test for semver compatibility
      ansible.builtin.assert:
        that:
          # Regex comes from https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string
          - crc_version is regex("^(?P<major>0|[1-9]\d*)\.(?P<minor>0|[1-9]\d*)\.(?P<patch>0|[1-9]\d*)(?:-(?P<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$")
        fail_msg: >-
          The specified crc_version ('{{ crc_version }}') is not semver compatible (https://semver.org/).
          See https://developers.redhat.com/content-gateway/rest/mirror/pub/openshift-v4/clients/crc/
          for a list of valid and available versions (exluding bundles/ and latest/).

  tasks:
    - name: Install required packages
      become: true
      tags: prerequisites
      ansible.builtin.apt:
        cache_valid_time: 3600
        name:
          - qemu-kvm
          - libvirt-daemon
          - libvirt-daemon-system
          - network-manager

    - name: Add user to 'libvirt' group
      tags: prerequisites
      become: true
      ansible.builtin.user:
        name: "{{ ansible_env.USER }}"
        append: true
        groups:
          - libvirt

    - name: Download crc {{ crc_version }}
      tags: download
      become: true
      ansible.builtin.unarchive:
        src: "https://developers.redhat.com/content-gateway/file/pub/openshift-v4/clients/crc/{{ crc_version }}/crc-linux-amd64.tar.xz"
        remote_src: true
        dest: /tmp
        mode: "0755"
        owner: "{{ ansible_env.USER }}"
        group: root
        creates: "/tmp/crc-linux-{{ crc_version }}-amd64"
      register: crc_download
      until: crc_download is succeeded
      retries: 5
      delay: 3

    - name: Make crc executable
      tags: download
      become: true
      ansible.builtin.copy:
        src: "/tmp/crc-linux-{{ crc_version }}-amd64/crc"
        remote_src: true
        dest: /usr/local/bin/crc
        mode: "0755"
        owner: "{{ ansible_env.USER }}"
        group: root

    - name: Enable cluster monitoring
      when: crc_cluster_monitoring
      tags: setup
      loop:
        - crc config set cpus 6
        - crc config set memory 14336
        - crc config set enable-cluster-monitoring true
      ansible.builtin.command: sg libvirt -c "{{ item }}"

    - name: Print timestamp
      tags: setup
      ansible.builtin.debug:
        msg: "Entered 'Setup and start crc' at {{ ansible_date_time.iso8601 }} UTC."

    - name: Setup and start crc (this can take up to 1h)
      tags: setup
      loop:
        - crc setup
        - crc config set kubeadmin-password kubeadmin
        - crc config set pull-secret-file {{ crc_pull_secret_file }}
        - crc start
      ansible.builtin.command: sg libvirt -c "{{ item }}"

    - name: Make oc executable
      tags: test
      become: true
      ansible.builtin.copy:
        src: "{{ ansible_env.HOME }}/.crc/bin/oc/oc"
        remote_src: true
        dest: /usr/local/bin/oc
        owner: "{{ ansible_env.USER }}"
        group: root
        mode: "0755"
        force: true

    - name: Test oc login as developer
      tags: test
      ansible.builtin.command: >
        oc login -u developer -p developer https://api.crc.testing:6443 --insecure-skip-tls-verify

    - name: Test project and pod creation as developer
      tags: test
      ansible.builtin.shell: |
        set -o pipefail
        oc new-project developer | true
        oc run alpine --command sleep 300 --image alpine:3.18.3
        oc wait --for=condition=Ready --timeout 15m pod/alpine
        oc delete pod/alpine --force
      args:
        executable: /bin/bash

    - name: Print webconsole info
      ansible.builtin.debug:
        msg: >-
          You can now login at https://console-openshift-console.apps-crc.testing
          with 'developer:developer' or 'kubeadmin:kubeadmin' credentials.
          Any kind of "insecure connection" errors can be ignored safely.
